#!/usr/bin/python3

# -*- coding: utf-8 -*-
import sys, os
import ngsolve.gui as G
import ngsolve as ngs
from ngsolve.gui.thread import inmain_decorator
import netgen.meshing

def Draw(obj, mesh=None, name=None, **kwargs):
    """Draw a Mesh or a CoefficientFunction, this function is overridden by
    the new gui and returns the drawn scene."""
    scene = None
    if isinstance(obj, netgen.meshing.NetgenGeometry):
        scene = G.scenes.GeometryScene(obj,name=name)
    if isinstance(obj,ngs.Mesh):
        scene = G.scenes.MeshScene(obj, name=name, **kwargs)
    if isinstance(obj, ngs.GridFunction):
        if name is None:
            name = obj.name
        if mesh is None:
            mesh = obj.space.mesh
    if isinstance(obj, ngs.CoefficientFunction):
        scene = G.scenes.SolutionScene(obj, mesh, name=name,
                                       autoscale = kwargs["autoscale"] if "autoscale" in kwargs else not ("min" in kwargs or "max" in kwargs),
                                       **kwargs)
    if scene:
        G.gui.draw(scene)
        return scene
    print("Cannot draw object of type ",type(obj))

def Redraw(blocking=True,**kwargs):
    if blocking:
        G.gui.redraw_blocking()
    else:
        G.gui.redraw()

if __name__ == "__main__":
    G.gui = G.GUI()
    def do_after_run():
        for option in sys.argv[1:]:
            if os.path.isfile(option):
                name,ext = os.path.splitext(option)
                if ext == ".py":
                    G.gui.loadPythonFile(option, not "-noexec" in sys.argv)
                    file_loaded = True
                else:
                    G.gui.msgbox = QtWidgets.QMessageBox(text = "Cannot load file type: " + ext)
                    G.gui.msgbox.setWindowTitle("File loading error")
                    G.gui.msgbox.show()
    ngs.Draw = Draw
    ngs.Redraw = Redraw
    if "-fastmode" in sys.argv:
        G.gui.setFastMode(True)
    G.gui.run(do_after_run)
