
#version 150
uniform samplerBuffer coefficients;

in VertexData
{
  vec3 pos;
  flat int element;
  vec3 lam;
} inData;

vec3 hsv2rgb(vec3 c)
{
    // TODO: min, max as uniform
    float min = -1.0;
    float max = 1.0;
    c.x = (c.x-min)/(max-min);
    c.x = clamp(c.x, 0.0, 1.0);
    c.x = (1.0 - c.x);
    c.x = floor(8*c.x)/7.0;
    c.x = clamp(c.x, 0.0, 1.0);
    c.x = c.x*240.0/360.0;
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}
float Eval( float x, float y, float z )
{                             
 float result = 0.0;
float var0 = x;
float var1 = y;
float var2 = 1.000000000000000;
float var3 = var2-var0;
float var4 = var3-var1;
float var5 = var1-var4;
float var6 = var2*var5;
float var7 = 2.000000000000000;
float var8 = var7*var0;
float var9 = var8-var2;
float var10 = var2*var2;
float var11 = 0.500000000000000;
float var12 = 1.500000000000000;
float var13 = var12*var9;
float var14 = var13+var11;
float var15 = var2*var14;
float var16 = -0.555555555555556;
float var17 = var16*var10;
float var18 = 0.111111111111111;
float var19 = 1.666666666666667;
float var20 = var19*var9;
float var21 = var20+var18;
float var22 = var21*var15;
float var23 = var22+var17;
float var24 = -0.700000000000000;
float var25 = var24*var15;
float var26 = 0.050000000000000;
float var27 = 1.750000000000000;
float var28 = var27*var9;
float var29 = var28+var26;
float var30 = var29*var23;
float var31 = var30+var25;
float var32 = -0.771428571428571;
float var33 = var32*var23;
float var34 = 0.028571428571429;
float var35 = 1.800000000000000;
float var36 = var35*var9;
float var37 = var36+var34;
float var38 = var37*var31;
float var39 = var38+var33;
float var40 = -0.814814814814815;
float var41 = var40*var31;
float var42 = 0.018518518518519;
float var43 = 1.833333333333333;
float var44 = var43*var9;
float var45 = var44+var42;
float var46 = var45*var39;
float var47 = var46+var41;
float var48 = -0.844155844155844;
float var49 = var48*var39;
float var50 = 0.012987012987013;
float var51 = 1.857142857142857;
float var52 = var51*var9;
float var53 = var52+var50;
float var54 = var53*var47;
float var55 = var54+var49;
float var56 = -0.865384615384615;
float var57 = var56*var47;
float var58 = 0.009615384615385;
float var59 = 1.875000000000000;
float var60 = var59*var9;
float var61 = var60+var58;
float var62 = var61*var55;
float var63 = var62+var57;
float var64 = -0.881481481481482;
float var65 = var64*var55;
float var66 = 0.007407407407407;
float var67 = 1.888888888888889;
float var68 = var67*var9;
float var69 = var68+var66;
float var70 = var69*var63;
float var71 = var70+var65;
float var72 = -0.894117647058824;
float var73 = var72*var63;
float var74 = 0.005882352941176;
float var75 = 1.900000000000000;
float var76 = var75*var9;
float var77 = var76+var74;
float var78 = var77*var71;
float var79 = var78+var73;
float var80 = -0.904306220095694;
float var81 = var80*var71;
float var82 = 0.004784688995215;
float var83 = 1.909090909090909;
float var84 = var83*var9;
float var85 = var84+var82;
float var86 = var85*var79;
float var87 = var86+var81;
float var88 = var3*var3;
float var89 = -0.500000000000000;
float var90 = var89*var88;
float var91 = var90*var2;
float var92 = var12*var5;
float var93 = var92*var6;
float var94 = var93+var91;
float var95 = var6*var2;
float var96 = 2.500000000000000;
float var97 = var96*var9;
float var98 = var97+var12;
float var99 = var6*var98;
float var100 = -0.560000000000000;
float var101 = var100*var95;
float var102 = 0.540000000000000;
float var103 = 2.100000000000000;
float var104 = var103*var9;
float var105 = var104+var102;
float var106 = var105*var99;
float var107 = var106+var101;
float var108 = -0.714285714285714;
float var109 = var108*var99;
float var110 = 0.285714285714286;
float var111 = var7*var9;
float var112 = var111+var110;
float var113 = var112*var107;
float var114 = var113+var109;
float var115 = -0.785714285714286;
float var116 = var115*var107;
float var117 = 0.178571428571429;
float var118 = 1.964285714285714;
float var119 = var118*var9;
float var120 = var119+var117;
float var121 = var120*var114;
float var122 = var121+var116;
float var123 = -0.827272727272727;
float var124 = var123*var114;
float var125 = 0.122727272727273;
float var126 = 1.950000000000000;
float var127 = var126*var9;
float var128 = var127+var125;
float var129 = var128*var122;
float var130 = var129+var124;
float var131 = -0.854700854700855;
float var132 = var131*var122;
float var133 = 0.089743589743590;
float var134 = 1.944444444444444;
float var135 = var134*var9;
float var136 = var135+var133;
float var137 = var136*var130;
float var138 = var137+var132;
float var139 = -0.874285714285714;
float var140 = var139*var130;
float var141 = 0.068571428571429;
float var142 = 1.942857142857143;
float var143 = var142*var9;
float var144 = var143+var141;
float var145 = var144*var138;
float var146 = var145+var140;
float var147 = -0.889037433155080;
float var148 = var147*var138;
float var149 = 0.054144385026738;
float var150 = 1.943181818181818;
float var151 = var150*var9;
float var152 = var151+var149;
float var153 = var152*var146;
float var154 = var153+var148;
float var155 = -0.900584795321637;
float var156 = var155*var146;
float var157 = 0.043859649122807;
float var158 = var135+var157;
float var159 = var158*var154;
float var160 = var159+var156;
float var161 = -0.666666666666667;
float var162 = var161*var88;
float var163 = var162*var6;
float var164 = var19*var5;
float var165 = var164*var94;
float var166 = var165+var163;
float var167 = var94*var2;
float var168 = 3.500000000000000;
float var169 = var168*var9;
float var170 = var169+var96;
float var171 = var94*var170;
float var172 = -0.551020408163265;
float var173 = var172*var167;
float var174 = 1.020408163265306;
float var175 = 2.571428571428572;
float var176 = var175*var9;
float var177 = var176+var174;
float var178 = var177*var171;
float var179 = var178+var173;
float var180 = -0.712962962962963;
float var181 = var180*var171;
float var182 = 0.578703703703704;
float var183 = 2.291666666666667;
float var184 = var183*var9;
float var185 = var184+var182;
float var186 = var185*var179;
float var187 = var186+var181;
float var188 = -0.787878787878788;
float var189 = var188*var179;
float var190 = 0.378787878787879;
float var191 = 2.166666666666667;
float var192 = var191*var9;
float var193 = var192+var190;
float var194 = var193*var187;
float var195 = var194+var189;
float var196 = -0.830769230769231;
float var197 = var196*var187;
float var198 = 0.269230769230769;
float var199 = var104+var198;
float var200 = var199*var195;
float var201 = var200+var197;
float var202 = -0.858585858585859;
float var203 = var202*var195;
float var204 = 0.202020202020202;
float var205 = 2.060606060606061;
float var206 = var205*var9;
float var207 = var206+var204;
float var208 = var207*var201;
float var209 = var208+var203;
float var210 = -0.878151260504202;
float var211 = var210*var201;
float var212 = 0.157563025210084;
float var213 = 2.035714285714286;
float var214 = var213*var9;
float var215 = var214+var212;
float var216 = var215*var209;
float var217 = var216+var211;
float var218 = -0.892712550607287;
float var219 = var218*var209;
float var220 = 0.126518218623482;
float var221 = 2.019230769230769;
float var222 = var221*var9;
float var223 = var222+var220;
float var224 = var223*var217;
float var225 = var224+var219;
float var226 = -0.750000000000000;
float var227 = var226*var88;
float var228 = var227*var94;
float var229 = var27*var5;
float var230 = var229*var166;
float var231 = var230+var228;
float var232 = var166*var2;
float var233 = 4.500000000000000;
float var234 = var233*var9;
float var235 = var234+var168;
float var236 = var166*var235;
float var237 = -0.543209876543210;
float var238 = var237*var232;
float var239 = 1.512345679012346;
float var240 = 3.055555555555555;
float var241 = var240*var9;
float var242 = var241+var239;
float var243 = var242*var236;
float var244 = var243+var238;
float var245 = -0.709090909090909;
float var246 = var245*var236;
float var247 = 0.890909090909091;
float var248 = 2.600000000000000;
float var249 = var248*var9;
float var250 = var249+var247;
float var251 = var250*var244;
float var252 = var251+var246;
float var253 = -0.786713286713287;
float var254 = var253*var244;
float var255 = 0.599650349650350;
float var256 = 2.386363636363636;
float var257 = var256*var9;
float var258 = var257+var255;
float var259 = var258*var252;
float var260 = var259+var254;
float var261 = -0.831111111111111;
float var262 = var261*var252;
float var263 = 0.435555555555556;
float var264 = 2.266666666666667;
float var265 = var264*var9;
float var266 = var265+var263;
float var267 = var266*var260;
float var268 = var267+var262;
float var269 = -0.859728506787330;
float var270 = var269*var260;
float var271 = 0.332579185520362;
float var272 = 2.192307692307693;
float var273 = var272*var9;
float var274 = var273+var271;
float var275 = var274*var268;
float var276 = var275+var270;
float var277 = -0.879699248120301;
float var278 = var277*var268;
float var279 = 0.263157894736842;
float var280 = 2.142857142857143;
float var281 = var280*var9;
float var282 = var281+var279;
float var283 = var282*var276;
float var284 = var283+var278;
float var285 = -0.800000000000000;
float var286 = var285*var88;
float var287 = var286*var166;
float var288 = var35*var5;
float var289 = var288*var231;
float var290 = var289+var287;
float var291 = var231*var2;
float var292 = 5.500000000000000;
float var293 = var292*var9;
float var294 = var293+var233;
float var295 = var231*var294;
float var296 = -0.537190082644628;
float var297 = var296*var291;
float var298 = 2.008264462809918;
float var299 = 3.545454545454545;
float var300 = var299*var9;
float var301 = var300+var298;
float var302 = var301*var295;
float var303 = var302+var297;
float var304 = -0.705128205128205;
float var305 = var304*var295;
float var306 = 1.211538461538461;
float var307 = 2.916666666666667;
float var308 = var307*var9;
float var309 = var308+var306;
float var310 = var309*var303;
float var311 = var310+var305;
float var312 = -0.784615384615385;
float var313 = var312*var303;
float var314 = 0.830769230769231;
float var315 = 2.615384615384615;
float var316 = var315*var9;
float var317 = var316+var314;
float var318 = var317*var311;
float var319 = var318+var313;
float var320 = -0.830252100840336;
float var321 = var320*var311;
float var322 = 0.612605042016807;
float var323 = 2.442857142857143;
float var324 = var323*var9;
float var325 = var324+var322;
float var326 = var325*var319;
float var327 = var326+var321;
float var328 = -0.859649122807018;
float var329 = var328*var319;
float var330 = 0.473684210526316;
float var331 = 2.333333333333333;
float var332 = var331*var9;
float var333 = var332+var330;
float var334 = var333*var327;
float var335 = var334+var329;
float var336 = -0.833333333333333;
float var337 = var336*var88;
float var338 = var337*var231;
float var339 = var43*var5;
float var340 = var339*var290;
float var341 = var340+var338;
float var342 = var290*var2;
float var343 = 6.500000000000000;
float var344 = var343*var9;
float var345 = var344+var292;
float var346 = var290*var345;
float var347 = -0.532544378698225;
float var348 = var347*var342;
float var349 = 2.505917159763313;
float var350 = 4.038461538461538;
float var351 = var350*var9;
float var352 = var351+var349;
float var353 = var352*var346;
float var354 = var353+var348;
float var355 = -0.701587301587302;
float var356 = var355*var346;
float var357 = 1.536507936507937;
float var358 = 3.238095238095238;
float var359 = var358*var9;
float var360 = var359+var357;
float var361 = var360*var354;
float var362 = var361+var356;
float var363 = -0.782352941176471;
float var364 = var363*var354;
float var365 = 1.067647058823529;
float var366 = 2.850000000000000;
float var367 = var366*var9;
float var368 = var367+var365;
float var369 = var368*var362;
float var370 = var369+var364;
float var371 = -0.828947368421053;
float var372 = var371*var362;
float var373 = 0.796052631578947;
float var374 = 2.625000000000000;
float var375 = var374*var9;
float var376 = var375+var373;
float var377 = var376*var370;
float var378 = var377+var372;
float var379 = -0.857142857142857;
float var380 = var379*var88;
float var381 = var380*var290;
float var382 = var51*var5;
float var383 = var382*var341;
float var384 = var383+var381;
float var385 = var341*var2;
float var386 = 7.500000000000000;
float var387 = var386*var9;
float var388 = var387+var343;
float var389 = var341*var388;
float var390 = -0.528888888888889;
float var391 = var390*var385;
float var392 = 3.004444444444444;
float var393 = 4.533333333333333;
float var394 = var393*var9;
float var395 = var394+var392;
float var396 = var395*var389;
float var397 = var396+var391;
float var398 = -0.698529411764706;
float var399 = var398*var389;
float var400 = 1.863970588235294;
float var401 = 3.562500000000000;
float var402 = var401*var9;
float var403 = var402+var400;
float var404 = var403*var397;
float var405 = var404+var399;
float var406 = -0.780185758513932;
float var407 = var406*var397;
float var408 = 1.308049535603715;
float var409 = 3.088235294117647;
float var410 = var409*var9;
float var411 = var410+var408;
float var412 = var411*var405;
float var413 = var412+var407;
float var414 = -0.875000000000000;
float var415 = var414*var88;
float var416 = var415*var341;
float var417 = var59*var5;
float var418 = var417*var384;
float var419 = var418+var416;
float var420 = var384*var2;
float var421 = 8.500000000000000;
float var422 = var421*var9;
float var423 = var422+var386;
float var424 = var384*var423;
float var425 = -0.525951557093426;
float var426 = var425*var420;
float var427 = 3.503460207612457;
float var428 = 5.029411764705882;
float var429 = var428*var9;
float var430 = var429+var427;
float var431 = var430*var424;
float var432 = var431+var426;
float var433 = -0.695906432748538;
float var434 = var433*var424;
float var435 = 2.192982456140351;
float var436 = 3.888888888888889;
float var437 = var436*var9;
float var438 = var437+var435;
float var439 = var438*var432;
float var440 = var439+var434;
float var441 = -0.888888888888889;
float var442 = var441*var88;
float var443 = var442*var384;
float var444 = var67*var5;
float var445 = var444*var419;
float var446 = var445+var443;
float var447 = var419*var2;
float var448 = 9.500000000000000;
float var449 = var448*var9;
float var450 = var449+var421;
float var451 = var419*var450;
float var452 = -0.523545706371191;
float var453 = var452*var447;
float var454 = 4.002770083102493;
float var455 = 5.526315789473684;
float var456 = var455*var9;
float var457 = var456+var454;
float var458 = var457*var451;
float var459 = var458+var453;
float var460 = -0.900000000000000;
float var461 = var460*var88;
float var462 = var461*var419;
float var463 = var75*var5;
float var464 = var463*var446;
float var465 = var464+var462;
float var466 = var446*var2;
float var467 = 10.500000000000000;
float var468 = var467*var9;
float var469 = var468+var448;
float var470 = var446*var469;
float var471 = -0.909090909090909;
float var472 = var471*var88;
float var473 = var472*var446;
float var474 = var83*var5;
float var475 = var474*var465;
float var476 = var475+var473;
float var477 = var465*var2;
result += texelFetch( coefficients, inData.element*66+0).r * var10;
result += texelFetch( coefficients, inData.element*66+1).r * var15;
result += texelFetch( coefficients, inData.element*66+2).r * var23;
result += texelFetch( coefficients, inData.element*66+3).r * var31;
result += texelFetch( coefficients, inData.element*66+4).r * var39;
result += texelFetch( coefficients, inData.element*66+5).r * var47;
result += texelFetch( coefficients, inData.element*66+6).r * var55;
result += texelFetch( coefficients, inData.element*66+7).r * var63;
result += texelFetch( coefficients, inData.element*66+8).r * var71;
result += texelFetch( coefficients, inData.element*66+9).r * var79;
result += texelFetch( coefficients, inData.element*66+10).r * var87;
result += texelFetch( coefficients, inData.element*66+11).r * var95;
result += texelFetch( coefficients, inData.element*66+12).r * var99;
result += texelFetch( coefficients, inData.element*66+13).r * var107;
result += texelFetch( coefficients, inData.element*66+14).r * var114;
result += texelFetch( coefficients, inData.element*66+15).r * var122;
result += texelFetch( coefficients, inData.element*66+16).r * var130;
result += texelFetch( coefficients, inData.element*66+17).r * var138;
result += texelFetch( coefficients, inData.element*66+18).r * var146;
result += texelFetch( coefficients, inData.element*66+19).r * var154;
result += texelFetch( coefficients, inData.element*66+20).r * var160;
result += texelFetch( coefficients, inData.element*66+21).r * var167;
result += texelFetch( coefficients, inData.element*66+22).r * var171;
result += texelFetch( coefficients, inData.element*66+23).r * var179;
result += texelFetch( coefficients, inData.element*66+24).r * var187;
result += texelFetch( coefficients, inData.element*66+25).r * var195;
result += texelFetch( coefficients, inData.element*66+26).r * var201;
result += texelFetch( coefficients, inData.element*66+27).r * var209;
result += texelFetch( coefficients, inData.element*66+28).r * var217;
result += texelFetch( coefficients, inData.element*66+29).r * var225;
result += texelFetch( coefficients, inData.element*66+30).r * var232;
result += texelFetch( coefficients, inData.element*66+31).r * var236;
result += texelFetch( coefficients, inData.element*66+32).r * var244;
result += texelFetch( coefficients, inData.element*66+33).r * var252;
result += texelFetch( coefficients, inData.element*66+34).r * var260;
result += texelFetch( coefficients, inData.element*66+35).r * var268;
result += texelFetch( coefficients, inData.element*66+36).r * var276;
result += texelFetch( coefficients, inData.element*66+37).r * var284;
result += texelFetch( coefficients, inData.element*66+38).r * var291;
result += texelFetch( coefficients, inData.element*66+39).r * var295;
result += texelFetch( coefficients, inData.element*66+40).r * var303;
result += texelFetch( coefficients, inData.element*66+41).r * var311;
result += texelFetch( coefficients, inData.element*66+42).r * var319;
result += texelFetch( coefficients, inData.element*66+43).r * var327;
result += texelFetch( coefficients, inData.element*66+44).r * var335;
result += texelFetch( coefficients, inData.element*66+45).r * var342;
result += texelFetch( coefficients, inData.element*66+46).r * var346;
result += texelFetch( coefficients, inData.element*66+47).r * var354;
result += texelFetch( coefficients, inData.element*66+48).r * var362;
result += texelFetch( coefficients, inData.element*66+49).r * var370;
result += texelFetch( coefficients, inData.element*66+50).r * var378;
result += texelFetch( coefficients, inData.element*66+51).r * var385;
result += texelFetch( coefficients, inData.element*66+52).r * var389;
result += texelFetch( coefficients, inData.element*66+53).r * var397;
result += texelFetch( coefficients, inData.element*66+54).r * var405;
result += texelFetch( coefficients, inData.element*66+55).r * var413;
result += texelFetch( coefficients, inData.element*66+56).r * var420;
result += texelFetch( coefficients, inData.element*66+57).r * var424;
result += texelFetch( coefficients, inData.element*66+58).r * var432;
result += texelFetch( coefficients, inData.element*66+59).r * var440;
result += texelFetch( coefficients, inData.element*66+60).r * var447;
result += texelFetch( coefficients, inData.element*66+61).r * var451;
result += texelFetch( coefficients, inData.element*66+62).r * var459;
result += texelFetch( coefficients, inData.element*66+63).r * var466;
result += texelFetch( coefficients, inData.element*66+64).r * var470;
result += texelFetch( coefficients, inData.element*66+65).r * var477;

return result;
}

void main()
{
  float x = inData.lam.x;
  float y = inData.lam.y;
  float z = inData.lam.z;
  gl_FragColor = vec4(hsv2rgb(vec3(Eval(x,y, z), 1.0, 1.0)), 1.0);
//   gl_FragColor = vec4(hsv2rgb(vec3(x, 1.0, 1.0)), 1.0);
  // gl_FragColor = vec4(1, 0,0,1);
}

